= abstract_class

Experimental abstract classes in ruby.

Like modules, abstract classes cannot be instantiated. Unlike modules, these classes can be inherited and any derived class can be instantiated.


== Installation

  gem install abstract_class


== Usage

  class ActiveRecord::Base
    abstract
  end

  class User < ActiveRecord::Base
  end

  # RuntimeError: abstract class ActiveRecord::Base can't be instantiated/allocated
  ActiveRecord::Base.new
  ActiveRecord::Base.allocate

  # instantiates/allocates like normal
  User.new
  User.allocate

  # returns true or false
  ActiveRecord::Base.abstract?
  User.abstract?


== Contributing

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a future version unintentionally.
* Commit, do not mess with Rakefile, version, or history. (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.
